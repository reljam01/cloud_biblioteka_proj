version: '3.5'
services:
  mongons:
    image: mongo:7.0
    container_name: "mongons"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 127.0.0.1:27017:27017
    #command: mongod --port 27017
    volumes:
      - './dockervolume/mongons:/data/db'
    #network_mode: host
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      
  mongobg:
    image: mongo:7.0
    container_name: "mongobg"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 127.0.0.1:27019:27017
    #command: mongod --port 27021
    volumes:
      - './dockervolume/mongobg:/data/db'
    #network_mode: host
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      
  mongoni:
    image: mongo:7.0
    container_name: "mongoni"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 127.0.0.1:27020:27017
    #command: mongod --port 27020
    volumes:
      - './dockervolume/mongoni:/data/db'
    #network_mode: host
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      
  mongocentral:
    image: mongo:7.0
    container_name: "mongocentral"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 127.0.0.1:27018:27017
    #command: mongod --port 27018
    volumes:
      - './dockervolume/mongocentral:/data/db'
    #network_mode: host
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet

  novisadapp:
    build: ./nsapp
    container_name: "nsapp"
    environment:
      MONGO_CONNECTION_STRING: 'mongodb://root:example@localhost:27017'
    depends_on:
      mongons:
        condition: service_healthy
    #ports:
      #- 9001:9001
    expose:
      - 9001
    stdin_open: true
    tty: true
    network_mode: host
    
  beogradapp:
    build: ./bgapp
    container_name: "bgapp"
    environment:
      MONGO_CONNECTION_STRING: 'mongodb://root:example@localhost:27019'
    depends_on:
      mongobg:
        condition: service_healthy
    #ports:
      #- 9002:9002
    expose:
      - 9002
    stdin_open: true
    tty: true
    network_mode: host
    
  nisapp:
    build: ./niapp
    container_name: "niapp"
    environment:
      MONGO_CONNECTION_STRING: 'mongodb://root:example@localhost:27020'
    depends_on:
      mongoni:
        condition: service_healthy
    #ports:
      #- 9003:9003
    expose:
      - 9003
    stdin_open: true
    tty: true
    network_mode: host
    
  centralapp:
    build: ./centralapp
    container_name: "centralapp"
    environment:
      MONGO_CONNECTION_STRING: 'mongodb://root:example@localhost:27018'
    depends_on:
      mongocentral:
        condition: service_healthy
    #ports:
      #- 9004:9004
    expose:
      - 9004
    stdin_open: true
    tty: true
    network_mode: host
    
  guiapp:
    build: ./gui
    container_name: "guiapp"
    depends_on:
      - novisadapp
      - centralapp
      - beogradapp
      - nisapp
    environment:
      DISPLAY: $DISPLAY
    network_mode: host
      
